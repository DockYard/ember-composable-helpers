name: CI

on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  lint:
    name: Lint
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - run: yarn lint:js

  test:
    name: Test
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - run: yarn test

  ember-try:
    name: "Ember Try"
    env:
      CI: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        try-scenario:
          [
            ember-lts-3.16,
            ember-lts-3.20,
            ember-beta,
            ember-canary,
            ember-default-with-jquery,
            embroider-safe,
            embroider-optimized,
          ]
    continue-on-error: ${{ matrix.try-scenario == 'ember-beta' || matrix.try-scenario == 'ember-canary' }}
    steps:
      - uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - run: yarn ember try:one ${{ matrix.try-scenario }}
        timeout-minutes: 10
